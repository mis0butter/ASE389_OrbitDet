function [r_ECI] = ECEFtoECI(JD, r_ECEF)
% ------------------------------------------------------------------------ 
% Purpose: Convert ECF (ECEF/ITRF) position to ECI (ICRF) position 
% 
% Inputs: 
%   JD      = Julan Date (UTC) 
%   r_ECEF  = position in ECEF (Earth-centered Earth-fixed) frame
% 
% Outputs: 
%   r_ECI   = position in ECI (Earth-centered inertial) frame 
% 
% Notes: 
%   Transformation to ECI from ECEF: 
%   ECI_DCM_ECEF = W * S' * N * P; 
%   W  = offset of Earth's angular velocity vector wrt ECEF Z axis 
%   S' = rotation of ECF about angular velocity vector 
%   N  = nutation of ECF wrt ECI 
%   P  = precession of ECF wrt ECI 
% ------------------------------------------------------------------------ 

%% P  = precession of ECF wrt ECI 

% time = number of centuries since J2000 as terrestrial time (TT) 
t = (JD - 2451545.0)./36525;

% precession angles? 

p11 = cos(sigma)*cos(theta)*cos(z) - sin(sigma)*sin(z); 
p12 = -sin(sigma)*cos(theta)*cos(z) - cos(sigma)*sin(z); 
p13 = -sin(theta)*cos(z); 

p21 = cos(sigma)*cos(theta)*sin(z) + sin(sigma)*cos(z); 
p22 = -sin(sigma)*cos(theta)*sin(z) + cos(sigma)*cos(z); 
p23 = -sin(theta)*sin(z); 

p31 = cos(sigma)*cos(theta); 
p32 = -sin(sigma)*sin(theta); 
p33 = co

P = [ p11, p12, p13 ; 
      p21, p22, p23 ; 
      p31, p32, p33 ]; 

%% ECI position calculation 

ECI_C_ECEF = W * S' * N * P; 
r_ECI      = ECI_C_ECEF * r_ECEF; 

end 
function drvSTM = TwoBod_4states_STM(t, rvSTM)
% ------------------------------------------------------------------------
% Inputs 
%   t = [Nx1] time vector (orbit is Keplerian, doesn't matter) 
%   x = [4x1] state vector 
% 
% Outputs 
%   dx = [4x1] derivative of state vector 
% ------------------------------------------------------------------------

global mu 

% initialize 
drv     = zeros(4, 1);       % force column vector 
drvSTM  = zeros(20, 1);   % STM is 4-by-4 --> 16 

STM     = rvSTM(5:20); 
STM     = reshape(STM, [6 6]); 

% dx1 = x3 
% dx2 = x4 
% dx3 = (-u/r^3) * x1
% dx4 = (-u/r^3) * x2

drvSTM(1:2) = rvSTM(3:4); 
r           = norm(rvSTM(1:2)); 
drvSTM(3:4) = ( - mu / r^3 ) * rvSTM(1:2); 

%% STM stuff 

x = rvSTM(1); 
y = rvSTM(2); 

G = [ -mu/r^3 + 3*mu*x^2/r^5, 3*mu*x*y/r^5; ... 
      3*mu*x*y/r^5,           -mu/r^3 + 3*mu*y^2 / r^5  ]; 
  
K = zeros(2,2); 

A = [ zeros(2), eye(2); ... 
      G,        K ]; 
  
dSTM = A * STM; 
dSTM = reshape(dSTM, [16 1]); 

drvSTM = 

end 